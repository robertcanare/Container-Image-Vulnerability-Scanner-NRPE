#!/bin/bash

# CENTREON CONTAINER VULNERABILITY SCANNER

# NAGIOS RETURN CODE
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3

# LIST OF SEVERITIES ARRAY
severities=("CRITICAL" "HIGH" "MEDIUM" "LOW")

# GET THE USER INPUTS
while getopts :s:m: option
do
 case "${option}"
 in
 s) SEV=${OPTARG};;
 m) MIN=${OPTARG};;
 esac
done

# SET THE DEFAULT VALUE
[[ -z "$MIN" ]] && MIN=5

# CHECK THE SEVERITY IF IS IN THE ARRAY severities, IF IT IS NOT EXISTING IT WILL SET THE DEFAULT VALUE
[[ " ${severities[*]} " =~ " ${SEV} " ]] && true || SEV="CRITICAL"

# EXECUTING TRIVY ENGINE ACROSS ALL RUNNING IMAGE CONTAINERS
for image in $(docker ps -a | awk '{print $2}' | awk NR\>1);
do
        vuln_count=`trivy image --ignore-unfixed -f json --severity $SEV $image | tail -n +6 | grep "VulnerabilityID" | sed -e 's/^[ \t]*//' | cut -d " " -f 2 | sed 's/"//g' | sed 's/,//g'`
        count+="$vuln_count"
done

# VULNERABILITIES COUNTER
ActualVulnCount=`echo $count | grep -o "CVE" | wc -l`

# CENTREON ALERTS AND INFORMATION CONDITION
if [[ $ActualVulnCount -gt $MIN ]]
then
        echo "Found total of $ActualVulnCount $SEV vulnerability on the running container images and minimum count is set to $MIN."
        echo "To identify it run the command:"
        echo "trivy image --ignore-unfixed --severity $SEV image_name"
        exit $STATE_CRITICAL
else
        echo "Found total of $ActualVulnCount $SEV vulnerability on the running container images and minimum count is set to $MIN."
        exit $STATE_OK
fi
